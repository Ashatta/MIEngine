<?xml version="1.0" standalone="yes"?>
<xs:schema targetNamespace="http://schemas.microsoft.com/vstudio/MDDDebuggerOptions/2014" xmlns:mstns="http://schemas.microsoft.com/vstudio/MDDDebuggerOptions/2014" xmlns="http://schemas.microsoft.com/vstudio/MDDDebuggerOptions/2014" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:element name="AndroidLaunchOptions">
    <xs:annotation>
      <xs:documentation>Instructs the debugger to launch an Android Application.</xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:attribute name="Package" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Name of the Android package to launch. Example: 'com.example.hellojni'</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="LaunchActivity" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Name of the activity class to start. Example: '.HelloJni'
            This is required if Attach is false.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SDKRoot" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Full path to the root of the Android SDK.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="NDKRoot" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Full path to the root of the Android NDK.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="IntermediateDirectory" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Full path to the directory where files from the device/emulator will be downloaded to. This directory is added to the SO Lib search path automatically.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="DeviceId" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>Adb device id of the emulator/device to launch to.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="LogcatServiceId" use="optional">
        <xs:annotation>
          <xs:documentation>
            Optional attribute which contains the GUID of logcat viewer VS Service id used by this type of project. If provided, the debugger will
            send events when processes in this application start. The service must implement IVsCustomDebuggerEventHandler110
            (from Microsoft.VisualStudio.Debugger.Interop.11.0.dll/msdbg110.h). Services can be registered in the registry
            ($RootKey$\Services\{VsService}), or through the VS shell IProfferService interface. The following messages are provided:

            MessageCode         Description
            0 (NewProcess)      A new process has been started in the application. VsComponentMessage.Parameter1 will be the package name (string),
            VsComponentMessage.Parameter2 will be the process id (integer)

            The source id used by the Android debug launcher is 1CED0608-638C-4B00-A1D2-CE56B1B672FA.
          </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Attach" type="xs:boolean" use="optional" default="false">
        <xs:annotation>
          <xs:documentation>
            If true, attach to a running process of this Package rather than launching.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="CommonAttributes"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="IOSLaunchOptions">
    <xs:annotation>
      <xs:documentation>Intructs the debugger how to launch an iOS application.</xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:attribute name="RemoteMachineName" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>TODO</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PackageId" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>TODO</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="vcremotePort" type="xs:int" use="required">
        <xs:annotation>
          <xs:documentation>TODO</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="IOSDebugTarget" use="required">
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation>TODO</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:enumeration value="device" />
            <xs:enumeration value="simulator" />
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="CommonAttributes"/>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="CommonAttributes">
    <xs:attribute name="TargetArchitecture" use="required">
      <xs:simpleType>
        <xs:annotation>
          <xs:documentation>Architecture of the target application. Examples: arm, x86</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="x86"/>
          <xs:enumeration value="arm"/>
          <xs:enumeration value="mips"/>
          <xs:enumeration value="x64"/>
          <xs:enumeration value="amd64"/>
          <xs:enumeration value="x86_64"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="AdditionalSOLibSearchPath" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Semicolon separated list of directories to use to search for .so files. Example: 'c:\dir1;c:\dir2'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MIMode" use="optional">
      <xs:simpleType>
        <xs:annotation>
          <xs:documentation>TODO</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="gdb"/>
          <xs:enumeration value="lldb"/>
          <xs:enumeration value="clrdbg"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:element name="LocalLaunchOptions">
    <xs:annotation>
      <xs:documentation>Instructs the debugger to launch a local MI Debugger process and connect to a remote MI Debugger Server.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="BaseLaunchOptions">
          <xs:attribute name="MIDebuggerPath" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Full path to the MI Debugger executable.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MIDebuggerServerAddress" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Network address of the MI Debugger Server to connect to (example: localhost:1234).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SerialPortLaunchOptions">
    <xs:annotation>
      <xs:documentation>Instructions the debugger to connect to an instance of an MI Debugger running on the target computer over serial port</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="BaseLaunchOptions">
          <xs:sequence>
            <xs:element ref="Command" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
          <xs:attribute name="Port" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Serial port to connect to (ex:com1).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="PipeLaunchOptions">
    <xs:annotation>
      <xs:documentation>Instructions the debugger to connect to an instance of an MI Debugger running on the target computer through some sort of standard input/output pipe (ex: telnet).</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="BaseLaunchOptions">
          <xs:sequence>
            <xs:element ref="Command" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
          <xs:attribute name="PipePath" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Path on the VS computer to an executable to run to establish a standard input/output pipe to the target computer.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PipeArguments" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Any arguments to pass to this program.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="TcpLaunchOptions">
    <xs:annotation>
      <xs:documentation>TODO</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="BaseLaunchOptions">
          <xs:attribute name="Hostname" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>TODO</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Port" type="xs:int" use="required">
            <xs:annotation>
              <xs:documentation>TODO</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Secure" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If true, use TSL security</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <!--base type for LocalLaunchOptions, PipeLaunchOptions, SerialPortLaunchOptions-->
  <xs:complexType name="BaseLaunchOptions">
    <xs:attribute name="ExePath" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
          Path to the executable file. For LocalLaunchOptions, this is a path on the Windows machine,
          for Pipe/Serial, this is a path on the remote machine. This path is not required if the project system provides
          it through the LaunchDebugTargets structure.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ExeArguments" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Any arguments to pass along to the target process in launch scenarios</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="WorkingDirectory" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Working directory on the remote device to use in launch scenarios</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="CommonAttributes"/>
  </xs:complexType>
  <xs:element name="Command">
    <xs:annotation>
      <xs:documentation>Command to execute after connecting</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
</xs:schema>